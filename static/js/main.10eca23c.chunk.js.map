{"version":3,"sources":["config/noty.js","redux/actions/noteActions.js","components/NoteInput.js","components/SearchBox.js","components/Note.js","components/NoteList.js","components/HomePage.js","components/NoteDetails.js","App.js","redux/reducer/noteReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["showNotification","text","Noty","layout","theme","type","timeout","show","setCurrentNote","object","payload","setEditable","id","NoteInput","today","Date","state","useSelector","dispatch","useDispatch","useState","title","description","date","getDate","getMonth","getFullYear","editable","now","value","setValue","className","onChange","e","target","placeholder","onClick","index","note","notes","findIndex","obj","createNote","SearchBox","search","Note","NoteList","filtered","filter","toLowerCase","indexOf","map","HomePage","NoteDetails","noteDetailsElement","currentnote","handleBackClick","App","pageElement","Object","keys","length","constructor","initialState","reducer","action","deleteIndex","listAfterDelete","splice","setEditList","rindex","resetEditList","editIndex","listAfterEdit","rootReducer","combineReducers","noteReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10eca23c.chunk.js","sourcesContent":["import Noty from \"noty\";\r\n\r\nexport const showNotification = (text)=> {\r\n     new Noty({\r\n         text : text,\r\n         layout : \"bottomRight\",\r\n         theme : \"nest\",\r\n         type : \"alert\",\r\n         timeout : 750,\r\n     }).show();\r\n};","import { showNotification } from \"../../config/noty\";\r\n\r\nexport const createNote = (value)=>{\r\n    showNotification(\"Note Created!\");\r\n    return{\r\n        type:\"CREATE_NOTE\",\r\n        payload: value\r\n    };\r\n};\r\nexport const updateSearch = (text)=>{\r\n    return{\r\n        type : \"UPDATE_SEARCH\",\r\n        payload : text\r\n    };\r\n};\r\n\r\nexport const deletNote = (id)=>{\r\n    showNotification(\"Note Deleted!\");\r\n    return {\r\n        type : \"DELETE_NOTE\",\r\n        payload : id\r\n    };\r\n};\r\n\r\nexport const setCurrentNote = (object)=>{\r\n    return{\r\n        type:\"SET_CURRENT_NOTE\",\r\n        payload : object\r\n    };\r\n};\r\n\r\nexport const setEditable = (id)=>{\r\n    return{\r\n        type:\"SET_EDIT\",\r\n        payload : id\r\n    };\r\n};\r\nexport const resetEditable = (id)=>{\r\n    return{\r\n        type:\"RESET_EDIT\",\r\n        payload : id\r\n    };\r\n};\r\n\r\nexport const editNote = (object)=>{\r\n    showNotification(\"Note Updated!\");\r\n    return{\r\n        type : \"EDIT_TODO\",\r\n        payload : object\r\n    };\r\n};","import React,{useState} from 'react';\r\nimport { useDispatch , useSelector} from \"react-redux\";\r\nimport { createNote } from \"../redux/actions/noteActions\";\r\nimport { showNotification } from \"../config/noty\";\r\n\r\nfunction NoteInput() {\r\n    const today = new Date();\r\n    const state = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const [value,setValue]=useState({\r\n        title :\"\",\r\n        description :\"\",\r\n        date : today.getDate()+'-'+(today.getMonth()+1)+'-'+today.getFullYear(),\r\n        editable : false,\r\n        id : Date.now()\r\n    }); \r\n    \r\n    const handleClick = () =>{\r\n        const noteList = [...state.note.notes];\r\n        let index = noteList.findIndex(obj=>obj.title===value.title)\r\n        // console.log(value);\r\n        \r\n        if(value.title===\"\" || value.description===\"\"){\r\n            showNotification(\"please fill all details.\");\r\n            return;\r\n        }\r\n        else if(index!==-1){\r\n            showNotification(\"Title already exists.\");\r\n            return;\r\n        }\r\n        dispatch(createNote(value));\r\n        setValue({...value,title:\"\",description:\"\",date:today.getDate()+'-'+(today.getMonth()+1)+'-'+today.getFullYear(),id:Date.now()});\r\n    };\r\n    return (\r\n        <div className=\"input-container\">\r\n            <input type=\"text\" value={value.title} onChange={(e)=>setValue({...value,title:e.target.value})} placeholder=\"Title\"/>\r\n            <textarea value={value.description} onChange={(e)=>setValue({...value,description:e.target.value})} placeholder=\"Type something...\"/>\r\n            <button onClick={handleClick}>Add</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NoteInput;\r\n","import React from 'react';\r\nimport { useSelector ,useDispatch } from \"react-redux\";\r\nimport { updateSearch } from \"../redux/actions/noteActions\";\r\n\r\nfunction SearchBox() {\r\n    const state = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n   \r\n    return (\r\n        <div className=\"search-container\">\r\n            <input type=\"text\" value={state.note.search} onChange={(e)=>dispatch(updateSearch(e.target.value))} placeholder=\"Search title...\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deletNote,setCurrentNote,setEditable } from \"../redux/actions/noteActions\";\r\n\r\nfunction Note({note,index}) {\r\n    const dispatch = useDispatch();\r\n    const handleDelete = ()=>{\r\n        dispatch(deletNote(note.id));\r\n    }\r\n    const handleCardClick= ()=>{\r\n        dispatch(setCurrentNote(note));\r\n        // console.log(note);\r\n    }\r\n    const handleEdit = ()=>{\r\n        dispatch(setEditable(note.id));\r\n        dispatch(setCurrentNote(note));\r\n    }\r\n    return (       \r\n            <div className=\"note-container\">\r\n                <div className=\"title\" onClick={handleCardClick}>\r\n                    <h2 >\r\n                        {note.title}\r\n                    </h2>\r\n                </div>\r\n                <div className=\"date-btn\">\r\n                    <h4>\r\n                        {note.date}\r\n                    </h4>\r\n                    <div className=\"btns\">\r\n                        <button onClick={handleEdit}><i className=\"fas fa-pencil-alt edit\"></i></button>\r\n                        <button onClick={handleDelete}><i className=\"far fa-trash-alt delete\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Note from \"./Note\";\r\nfunction NoteList() {\r\n    const state = useSelector(state => state);\r\n    var filtered = [];\r\n    if(state.note.search!==\"\"){\r\n       filtered = state.note.notes.filter(note=>{\r\n           return note.title.toLowerCase().indexOf(state.note.search.toLowerCase())!==-1;\r\n       }) \r\n    //    console.log(filtered);\r\n    }else{\r\n        filtered = [...state.note.notes];\r\n    }\r\n    return (\r\n        <div className=\"list-container\">\r\n            {\r\n                filtered.map((note,index)=>(\r\n                    <Note\r\n                        note ={note}\r\n                        key={index}\r\n                        index={index}\r\n                    />\r\n                ))\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteList;\r\n","import React from 'react';\r\nimport NoteInput from \"./NoteInput\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport NoteList from \"./NoteList\";\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <>\r\n        <NoteInput/>\r\n        <SearchBox/>\r\n        <NoteList/>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n","import React,{useState} from 'react';\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { setCurrentNote, setEditable,resetEditable,editNote} from \"../redux/actions/noteActions\";\r\nfunction NoteDetails() {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state);\r\n\r\n    const [value,setValue]=useState({\r\n        title : state.note.currentnote.title,\r\n        description:state.note.currentnote.description,\r\n        date:state.note.currentnote.date,\r\n        id:state.note.currentnote.id,\r\n        editable:false\r\n    });\r\n\r\n    const handleBackClick = ()=>{\r\n        dispatch(resetEditable(state.note.currentnote.id));\r\n        const obj = {};\r\n        dispatch(setCurrentNote(obj));\r\n    }\r\n\r\n    const handleEditClick = ()=>{\r\n        dispatch(setEditable(state.note.currentnote.id));\r\n    }\r\n\r\n    const handleSubmitEdit=()=>{\r\n        dispatch(editNote(value));\r\n        setValue({...value,editable:false});\r\n    }\r\n\r\n    var noteDetailsElement;\r\n    if(state.note.currentnote.editable){\r\n        noteDetailsElement = <div className=\"note-detail-container\">\r\n        <div className=\"btns\">\r\n          <button onClick={handleBackClick}><i className=\"fas fa-chevron-left\"></i></button>\r\n          <button onClick={handleSubmitEdit}><i className=\"fas fa-check\"></i></button>\r\n        </div>\r\n        <div className=\"note-details\">\r\n          <input type=\"text\" value={value.title} onChange={(e)=>setValue({...value,title:e.target.value})}/> \r\n          <h4>\r\n            27-2-2021\r\n          </h4>\r\n          <textarea value={value.description} onChange={(e)=>setValue({...value,description:e.target.value})}/>\r\n        </div> \r\n      </div>;\r\n    }\r\n    else{\r\n        noteDetailsElement=<div className=\"note-detail-container\">\r\n            <div className=\"btns\">\r\n            <button onClick={handleBackClick}><i className=\"fas fa-chevron-left\"></i></button>\r\n            <button onClick={handleEditClick}><i className=\"fas fa-pencil-alt edit\"></i></button>\r\n            </div>\r\n            <div className=\"note-details\">\r\n            <h2>\r\n                {state.note.currentnote.title}\r\n            </h2>\r\n            <h4>\r\n                27-2-2021\r\n            </h4>\r\n            <p>\r\n                {state.note.currentnote.description}\r\n            </p>\r\n            </div> \r\n        </div>;\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n        {noteDetailsElement}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NoteDetails;\r\n","import './style/App.scss';\nimport HomePage from \"./components/HomePage\";\nimport NoteDetails from \"./components/NoteDetails\";\nimport { useSelector } from \"react-redux\";\nimport \"../node_modules/noty/lib/noty.css\";\nimport \"../node_modules/noty/lib/themes/nest.css\";\n\n\nfunction App() {\n  const state = useSelector(state => state);\n  var pageElement;\n  if(Object.keys(state.note.currentnote).length === 0 && state.note.currentnote.constructor === Object){\n    pageElement = <HomePage/>\n  }\n  else{\n    // console.log(state.note.currentnote);\n    pageElement = <NoteDetails/>\n  }\n  return (\n    <div className=\"App\">\n      <h1>\n        Notes\n      </h1>\n      {/* <HomePage/> */}\n      {pageElement}\n\n\n      \n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    notes : [],\r\n    search : \"\",\r\n    currentnote:{}\r\n};\r\n\r\nconst reducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case \"CREATE_NOTE\":\r\n            return {\r\n                ...state,\r\n                notes : [...state.notes,action.payload]\r\n            };\r\n        case \"UPDATE_SEARCH\":\r\n            return{\r\n                ...state,\r\n                search : action.payload\r\n            };\r\n        case \"DELETE_NOTE\":\r\n            var deleteIndex = state.notes.findIndex(obj=>obj.id===action.payload);\r\n            const listAfterDelete = state.notes;\r\n            listAfterDelete.splice(deleteIndex,1);\r\n            return{\r\n                ...state,\r\n                notes : listAfterDelete\r\n            };\r\n        case \"SET_CURRENT_NOTE\":\r\n            return{\r\n                ...state,\r\n                currentnote : action.payload\r\n            };\r\n        case \"SET_EDIT\":\r\n            var index = state.notes.findIndex(obj=>obj.id===action.payload);\r\n            let setEditList = state.notes;\r\n            setEditList[index].editable =true;\r\n            return{\r\n                ...state,\r\n                notes : setEditList\r\n            };\r\n        case \"RESET_EDIT\":\r\n            var rindex = state.notes.findIndex(obj=>obj.id===action.payload);\r\n            let resetEditList = state.notes;\r\n            resetEditList[rindex].editable =false;\r\n            return{\r\n                ...state,\r\n                notes : resetEditList\r\n            };\r\n        case \"EDIT_TODO\":\r\n            const editIndex = state.notes.findIndex(obj=>obj.id===action.payload.id);\r\n            let listAfterEdit = state.notes;\r\n            listAfterEdit[editIndex]=action.payload;\r\n            return{\r\n                ...state,\r\n                notes : listAfterEdit,\r\n                currentnote :action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import noteReducer from \"./reducer/noteReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst rootReducer = combineReducers({\r\n    note : noteReducer\r\n});\r\n\r\nconst persistConfig ={\r\n    key : 'root',\r\n    storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig,rootReducer);\r\n\r\nexport default persistedReducer;","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nconst store = createStore(rootReducer,composeWithDevTools());\r\nconst persistor = persistStore(store);\r\nexport {store,persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport {store,persistor} from \"./redux/store\";\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}